1. create a next api /api/login.js

/************ code  ***********************/
import { API_URL } from "@config/index";

const login_api = async (req, res) => {
  if (req.method === "POST") {
    const { identifier, password } = req.body;

    const strapiRes = await fetch(`${API_URL}/api/auth/local`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        identifier: identifier,
        password,
      }),
    });

    const data = await strapiRes.json();

    // console.log(data, "data");

    // res.status(200).json({ res: data});
    if (strapiRes.ok) {
      // TODO - Set cookie
      res.status(200).json({user: data?.user?.username});
    } else {
   
      res.status(data?.error?.status).json({ message: data?.error?.message });
    }
  } else {
    res.setHeader("Allow", ["POST"]);
    res.status(405).json({ message: `Method ${req.method} not allowed` });
  }
};

export default login_api;

/************ end of code  ***********************/

2. reqest the next api 
 // Login user
  const login = async ({ email: identifier, password }) => {
    // console.log({ identifier, password });
    const res = await fetch(`${NEXT_URL}/api/login`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        identifier: identifier,
        password,
      }),
    });

    const data = await res.json()

    console.log('data: ', data?.message)

    if(res.ok){
      setUser(data?.user)
    } else{
      console.log('mpkhe sto else')
      setError(data?.message)
    }

  };
